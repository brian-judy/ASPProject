// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace ASPProject.Models
{
    [Table("Customer")]
    public partial class Customer
    {
        public Customer()
        {
            Orders = new HashSet<Order>();
        }

        [Key]
        [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)]
        public int CustomerID { get; set; }
        [Required]
        [StringLength(50)]
        [Unicode(false)]
        [Display(Name = "First Name")]
        [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "First Name; Upper and lower case letters")]
        public string FirstName { get; set; }

        [Required]
        [StringLength(50)]
        [Unicode(false)]
        [Display(Name = "Last Name")]
        [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Last Name; Upper and lower case letters")]
        public string LastName { get; set; }
        
        [StringLength(20)]
        [Unicode(false)]
        [Required(ErrorMessage = "Please enter a username")]
        [Display(Name = "Username")]
        [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Upper and lower case letters")]
        public string Username { get; set; }

        [StringLength(70)] 
        [Unicode(false)]
        [Required(ErrorMessage = "Please enter a password")]
        [Display(Name = "Password")]
        [UIHint("password")]
        [RegularExpression(@"^[a-zA-Z0-9\*\$]+$", ErrorMessage = "Letters, digits, *, $")]
        public string Password { get; set; }

        [StringLength(30)]
        [Display(Name = "Address")]
        [RegularExpression(@"^[a-zA-Z0-9][\w\s\.]*[a-zA-Z0-9\.]$", ErrorMessage = "Invalid characters")]
        public string Address { get; set; }

        [StringLength(30)]
        [Display(Name = "City")]
        [RegularExpression(@"^[a-zA-Z][a-zA-Z\s]*[a-zA-Z]$", ErrorMessage = "Invalid characters")]
        public string City { get; set; }

        [StringLength(2)]
        [Display(Name = "State")]
        [RegularExpression(@"^[a-zA-Z]{2}$", ErrorMessage = "Please enter a valid state abbreviation")]
        public string State { get; set; }

        [StringLength(10)]
        [Display(Name = "Postal Code")]
        [DataType(DataType.PostalCode)]
        [RegularExpression(@"^\d{5}(-\d{4})?$", ErrorMessage = "Please enter a valid 5 or 9 digit zip code")]
        public string Zip { get; set; }

        [InverseProperty("Customer")]
        public virtual ICollection<Order> Orders { get; set; }
    }
}